services:
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ core port
      - "15672:15672" # RabbitMQ management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq:rw
      - ./rabbitmq/definitions.json:/opt/definitions.json:ro
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  publishercomplaints:
    build: .
    env_file:
      - .env
    container_name: publisherComplaints
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python -u publisher/publisher-complaints.py
  
  publisherculture:
    build: .
    env_file:
      - .env
    container_name: publisherCulture
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python -u publisher/publisher-culture.py

  suscribermobility:
    build: .
    env_file:
      - .env
    container_name: suscriberMobility
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python -u suscriber/queue-suscriber.py "mobility-queue"

  suscriberwaste:
    build: .
    env_file:
      - .env
    container_name: suscriberWaste
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python -u suscriber/queue-suscriber.py "waste-management-queue"

  suscriberanalitycs:
    build: .
    env_file:
      - .env
    container_name: suscriberAnalitycs
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python -u suscriber/queue-suscriber.py "analitycs-queue"

volumes:
  rabbitmq_data: